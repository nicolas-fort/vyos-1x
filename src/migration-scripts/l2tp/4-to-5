#!/usr/bin/env python3
#
# Copyright (C) 2023 VyOS maintainers and contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or later as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# - move all pool to named pools
#       'start-stop' migrate to namedpool 'default-range-pool'
#       'subnet' migrate to namedpool 'default-subnet-pool'
#       'default-subnet-pool' is the next pool for 'default-range-pool'

import os

from sys import argv
from sys import exit
from vyos.configtree import ConfigTree


if len(argv) < 2:
    print("Must specify file name!")
    exit(1)

file_name = argv[1]

with open(file_name, 'r') as f:
    config_file = f.read()

config = ConfigTree(config_file)
base = ['vpn', 'l2tp', 'remote-access']
pool_base = base + ['client-ip-pool']
if not config.exists(base):
    exit(0)

if not config.exists(pool_base):
    exit(0)
default_pool = ''
range_pool_name = 'default-range-pool'
subnet_base_name = 'default-subnet-pool'
number = 1
subnet_pool_name = f'{subnet_base_name}-{number}'
prev_subnet_pool = subnet_pool_name
if config.exists(pool_base + ['subnet']):
    default_pool = subnet_pool_name
    for subnet in config.return_values(pool_base + ['subnet']):
        config.set(pool_base + [subnet_pool_name, 'range'], value=subnet)
        if prev_subnet_pool != subnet_pool_name:
            config.set(pool_base + [prev_subnet_pool, 'next-pool'],
                       value=subnet_pool_name)
            prev_subnet_pool = subnet_pool_name
        number += 1
        subnet_pool_name = f'{subnet_base_name}-{number}'

    config.delete(pool_base + ['subnet'])

if config.exists(pool_base + ['start']) and config.exists(pool_base + ['stop']):
    start_ip = config.return_value(pool_base + ['start'])
    stop_ip = config.return_value(pool_base + ['stop'])
    ip_range = f'{start_ip}-{stop_ip}'
    config.delete(pool_base + ['start'])
    config.delete(pool_base + ['stop'])
    config.set(pool_base + [range_pool_name, 'range'], value=ip_range)
    if default_pool:
        config.set(pool_base + [range_pool_name, 'next-pool'],
                   value=default_pool)
    default_pool = range_pool_name

if default_pool:
    config.set(base + ['default-pool'], value=default_pool)
# format as tag node
config.set_tag(pool_base)

try:
    with open(file_name, 'w') as f:
        f.write(config.to_string())
except OSError as e:
    print("Failed to save the modified config: {}".format(e))
    exit(1)
